Resources:
  sslSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0

files:
  /etc/nginx/conf.d/proxy.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      upstream nodejs {
        server 127.0.0.1:8081;
        keepalive 256;
      }

      server {
        listen 8080;

        if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
          set $year $1;
          set $month $2;
          set $day $3;
          set $hour $4;
        }
        access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
        access_log /var/log/nginx/access.log main;

        location /.well-known/acme-challenge/ {
          root /var/www/certbot/;
        }
        location / {
          return 301 https://$host$request_uri;
        }
      }

  /etc/nginx/conf.d/https_custom.pre:
    mode: "000644"
    owner: root
    group: root
    content: |
      server {
        listen       443 default ssl;
        server_name  localhost;
        error_page   497 https://$host$request_uri;

        ssl_certificate      /etc/letsencrypt/live/ebcert/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/ebcert/privkey.pem;
        ssl_session_timeout  5m;
        ssl_protocols        TLSv1.1 TLSv1.2;
        ssl_ciphers          "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_prefer_server_ciphers on;
        if ($ssl_protocol = "") {
          rewrite ^ https://$host$request_uri? permanent;
        }

        if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
          set $year $1;
          set $month $2;
          set $day $3;
          set $hour $4;
        }
        access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
        access_log /var/log/nginx/access.log main;

        location ~ ^/(lib/|img/) {
          root /var/app/current/public;
          access_log off;
        }
        location /.well-known/acme-challenge/ {
          root /var/www/certbot/;
        }
        location / {
            proxy_pass  http://nodejs;
            proxy_set_header   Connection "";
            proxy_http_version 1.1;
            proxy_set_header        Host            $host;
            proxy_set_header        X-Real-IP       $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        Upgrade         $http_upgrade;
            proxy_set_header        Connection      "upgrade";
        }

        gzip on;
        gzip_comp_level 4;
        gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
      }

  /opt/elasticbeanstalk/hooks/configdeploy/post/99_kill_default_nginx.sh:
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash -xe
      rm -f /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf
      service nginx stop
      service nginx start

  /opt/elasticbeanstalk/hooks/appdeploy/pre/00_setup_swap.sh:
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      SWAPFILE=/var/swapfile
      SWAP_MEGABYTES=2048

      if [ -f $SWAPFILE ]; then
        echo "Swapfile $SWAPFILE found, assuming already setup"
        exit;
      fi

      /bin/dd if=/dev/zero of=$SWAPFILE bs=1M count=$SWAP_MEGABYTES
      /bin/chmod 600 $SWAPFILE
      /sbin/mkswap $SWAPFILE
      /sbin/swapon $SWAPFILE

  /etc/cron.d/renew-ssl:
    mode: "000644"
    owner: root
    group: root
    content: |
      39 1,13 * * * root /root/certbot-auto renew --no-self-upgrade --renew-hook "/etc/init.d/nginx reload" >> /var/log/renew-ssl.log 2>&1

  /opt/elasticbeanstalk/tasks/taillogs.d/renew-ssl.conf:
    mode: "000755"
    owner: root
    group: root
    content: |
      /var/log/renew-ssl.log

packages:
  yum:
    epel-release: []

commands:
  00_remove_old_cron:
    command: "rm -f /etc/cron.d/*.bak"
  10_update_npm:
    command: PATH=$PATH:/opt/elasticbeanstalk/node-install/node-v12.18.3-linux-x64/bin/ && npm install -g npm@6.14.7
    cwd: /opt/elasticbeanstalk/node-install/node-v12.18.3-linux-x64/bin/

container_commands:
  00_remove_config:
    command: "rm -f /tmp/deployment/config/#etc#nginx#conf.d#00_elastic_beanstalk_proxy.conf /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf"
  10_install_certbot:
    command: "wget https://dl.eff.org/certbot-auto;chmod a+x certbot-auto"
  20_create_webroot_path:
    command: "sudo mkdir -p /var/www/certbot/"
  30_get_cert_webroot_mode:
    command: "sudo ./certbot-auto certonly --debug --non-interactive --email ${EMAIL} --agree-tos --authenticator webroot --webroot-path /var/www/certbot --domains ${CERTDOMAIN} --keep-until-expiring --installer nginx"
  40_link:
    command: "sudo ln -sf /etc/letsencrypt/live/nsidr.com /etc/letsencrypt/live/ebcert"
  50_add_to_crontab:
    command: "sudo crontab /etc/cron.d/renew-ssl"
  60_config:
    command: "sudo mv /etc/nginx/conf.d/https_custom.pre /etc/nginx/conf.d/https_custom.conf"
